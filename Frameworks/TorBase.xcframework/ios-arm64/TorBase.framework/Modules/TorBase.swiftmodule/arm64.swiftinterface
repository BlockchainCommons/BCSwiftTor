// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios15 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name TorBase
import CLZMA
import CLibEvent
import COpenSSL
import CTor
import Foundation
import Swift
@_exported import TorBase
import _Concurrency
public enum TorUtils {
  public static var EVENT_LOG_DEBUG: Swift.UInt32
  public static var EVENT_LOG_MSG: Swift.UInt32
  public static var EVENT_LOG_WARN: Swift.UInt32
  public static var EVENT_LOG_ERR: Swift.UInt32
  public static var EVENT_DBG_ALL: Swift.UInt32
  public static var EVENT_DBG_NONE: Swift.UInt32
  public static var lzmaVersion: Swift.String {
    get
  }
  public static var openSSLVersion: Swift.String {
    get
  }
  public static var libEventsVersion: Swift.String {
    get
  }
  public static var torVersion: Swift.String {
    get
  }
  public static var dependencyVersions: [Swift.String : Swift.String] {
    get
  }
  public static func runTorMain(arguments: [Swift.String])
  public static func installTorLogging(minLogPriority: Swift.Int32, maxLogPriority: Swift.Int32, callback: @convention(c) (_ logPriority: Swift.Int32, _ domain: Swift.UInt64, _ msg: Swift.Optional<Swift.UnsafePointer<Swift.Int8>>) -> Swift.Void)
  public static func setEventLogCallback(_ cb: CLibEvent.event_log_cb)
  public static func setEventDebugLogging(isEnabled: Swift.Bool)
}
